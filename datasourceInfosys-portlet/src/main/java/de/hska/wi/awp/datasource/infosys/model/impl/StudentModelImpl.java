package de.hska.wi.awp.datasource.infosys.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.hska.wi.awp.datasource.infosys.model.Student;
import de.hska.wi.awp.datasource.infosys.model.StudentModel;
import de.hska.wi.awp.datasource.infosys.model.StudentSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Student service. Represents a row in the &quot;datasourceInfosys_Student&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.hska.wi.awp.datasource.infosys.model.StudentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StudentImpl}.
 * </p>
 *
 * @author Daniel Storch
 * @see StudentImpl
 * @see de.hska.wi.awp.datasource.infosys.model.Student
 * @see de.hska.wi.awp.datasource.infosys.model.StudentModel
 * @generated
 */
@JSON(strict = true)
public class StudentModelImpl extends BaseModelImpl<Student>
    implements StudentModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a student model instance should use the {@link de.hska.wi.awp.datasource.infosys.model.Student} interface instead.
     */
    public static final String TABLE_NAME = "datasourceInfosys_Student";
    public static final Object[][] TABLE_COLUMNS = {
            { "firstName", Types.VARCHAR },
            { "lastName", Types.VARCHAR },
            { "id_", Types.BIGINT },
            { "project_id", Types.BIGINT },
            { "studenthskaId", Types.VARCHAR },
            { "matnr", Types.BIGINT },
            { "role", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table datasourceInfosys_Student (firstName VARCHAR(75) null,lastName VARCHAR(75) null,id_ LONG not null primary key,project_id LONG,studenthskaId VARCHAR(75) null,matnr LONG,role LONG)";
    public static final String TABLE_SQL_DROP = "drop table datasourceInfosys_Student";
    public static final String ORDER_BY_JPQL = " ORDER BY student.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY datasourceInfosys_Student.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Student"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Student"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.de.hska.wi.awp.datasource.infosys.model.Student"),
            true);
    public static long PROJECT_ID_COLUMN_BITMASK = 1L;
    public static long ID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.hska.wi.awp.datasource.infosys.model.Student"));
    private static ClassLoader _classLoader = Student.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Student.class
        };
    private String _firstName;
    private String _lastName;
    private long _id;
    private long _project_id;
    private long _originalProject_id;
    private boolean _setOriginalProject_id;
    private String _studenthskaId;
    private long _matnr;
    private long _role;
    private long _columnBitmask;
    private Student _escapedModel;

    public StudentModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Student toModel(StudentSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Student model = new StudentImpl();

        model.setFirstName(soapModel.getFirstName());
        model.setLastName(soapModel.getLastName());
        model.setId(soapModel.getId());
        model.setProject_id(soapModel.getProject_id());
        model.setStudenthskaId(soapModel.getStudenthskaId());
        model.setMatnr(soapModel.getMatnr());
        model.setRole(soapModel.getRole());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Student> toModels(StudentSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Student> models = new ArrayList<Student>(soapModels.length);

        for (StudentSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Student.class;
    }

    @Override
    public String getModelClassName() {
        return Student.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("firstName", getFirstName());
        attributes.put("lastName", getLastName());
        attributes.put("id", getId());
        attributes.put("project_id", getProject_id());
        attributes.put("studenthskaId", getStudenthskaId());
        attributes.put("matnr", getMatnr());
        attributes.put("role", getRole());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String firstName = (String) attributes.get("firstName");

        if (firstName != null) {
            setFirstName(firstName);
        }

        String lastName = (String) attributes.get("lastName");

        if (lastName != null) {
            setLastName(lastName);
        }

        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Long project_id = (Long) attributes.get("project_id");

        if (project_id != null) {
            setProject_id(project_id);
        }

        String studenthskaId = (String) attributes.get("studenthskaId");

        if (studenthskaId != null) {
            setStudenthskaId(studenthskaId);
        }

        Long matnr = (Long) attributes.get("matnr");

        if (matnr != null) {
            setMatnr(matnr);
        }

        Long role = (Long) attributes.get("role");

        if (role != null) {
            setRole(role);
        }
    }

    @JSON
    @Override
    public String getFirstName() {
        if (_firstName == null) {
            return StringPool.BLANK;
        } else {
            return _firstName;
        }
    }

    @Override
    public void setFirstName(String firstName) {
        _firstName = firstName;
    }

    @JSON
    @Override
    public String getLastName() {
        if (_lastName == null) {
            return StringPool.BLANK;
        } else {
            return _lastName;
        }
    }

    @Override
    public void setLastName(String lastName) {
        _lastName = lastName;
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public long getProject_id() {
        return _project_id;
    }

    @Override
    public void setProject_id(long project_id) {
        _columnBitmask |= PROJECT_ID_COLUMN_BITMASK;

        if (!_setOriginalProject_id) {
            _setOriginalProject_id = true;

            _originalProject_id = _project_id;
        }

        _project_id = project_id;
    }

    public long getOriginalProject_id() {
        return _originalProject_id;
    }

    @JSON
    @Override
    public String getStudenthskaId() {
        if (_studenthskaId == null) {
            return StringPool.BLANK;
        } else {
            return _studenthskaId;
        }
    }

    @Override
    public void setStudenthskaId(String studenthskaId) {
        _studenthskaId = studenthskaId;
    }

    @JSON
    @Override
    public long getMatnr() {
        return _matnr;
    }

    @Override
    public void setMatnr(long matnr) {
        _matnr = matnr;
    }

    @JSON
    @Override
    public long getRole() {
        return _role;
    }

    @Override
    public void setRole(long role) {
        _role = role;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Student.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Student toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Student) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        StudentImpl studentImpl = new StudentImpl();

        studentImpl.setFirstName(getFirstName());
        studentImpl.setLastName(getLastName());
        studentImpl.setId(getId());
        studentImpl.setProject_id(getProject_id());
        studentImpl.setStudenthskaId(getStudenthskaId());
        studentImpl.setMatnr(getMatnr());
        studentImpl.setRole(getRole());

        studentImpl.resetOriginalValues();

        return studentImpl;
    }

    @Override
    public int compareTo(Student student) {
        long primaryKey = student.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Student)) {
            return false;
        }

        Student student = (Student) obj;

        long primaryKey = student.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        StudentModelImpl studentModelImpl = this;

        studentModelImpl._originalProject_id = studentModelImpl._project_id;

        studentModelImpl._setOriginalProject_id = false;

        studentModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Student> toCacheModel() {
        StudentCacheModel studentCacheModel = new StudentCacheModel();

        studentCacheModel.firstName = getFirstName();

        String firstName = studentCacheModel.firstName;

        if ((firstName != null) && (firstName.length() == 0)) {
            studentCacheModel.firstName = null;
        }

        studentCacheModel.lastName = getLastName();

        String lastName = studentCacheModel.lastName;

        if ((lastName != null) && (lastName.length() == 0)) {
            studentCacheModel.lastName = null;
        }

        studentCacheModel.id = getId();

        studentCacheModel.project_id = getProject_id();

        studentCacheModel.studenthskaId = getStudenthskaId();

        String studenthskaId = studentCacheModel.studenthskaId;

        if ((studenthskaId != null) && (studenthskaId.length() == 0)) {
            studentCacheModel.studenthskaId = null;
        }

        studentCacheModel.matnr = getMatnr();

        studentCacheModel.role = getRole();

        return studentCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(15);

        sb.append("{firstName=");
        sb.append(getFirstName());
        sb.append(", lastName=");
        sb.append(getLastName());
        sb.append(", id=");
        sb.append(getId());
        sb.append(", project_id=");
        sb.append(getProject_id());
        sb.append(", studenthskaId=");
        sb.append(getStudenthskaId());
        sb.append(", matnr=");
        sb.append(getMatnr());
        sb.append(", role=");
        sb.append(getRole());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(25);

        sb.append("<model><model-name>");
        sb.append("de.hska.wi.awp.datasource.infosys.model.Student");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>firstName</column-name><column-value><![CDATA[");
        sb.append(getFirstName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastName</column-name><column-value><![CDATA[");
        sb.append(getLastName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>project_id</column-name><column-value><![CDATA[");
        sb.append(getProject_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>studenthskaId</column-name><column-value><![CDATA[");
        sb.append(getStudenthskaId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>matnr</column-name><column-value><![CDATA[");
        sb.append(getMatnr());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>role</column-name><column-value><![CDATA[");
        sb.append(getRole());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
