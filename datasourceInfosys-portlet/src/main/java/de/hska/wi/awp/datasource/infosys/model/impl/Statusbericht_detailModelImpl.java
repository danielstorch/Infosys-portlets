package de.hska.wi.awp.datasource.infosys.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail;
import de.hska.wi.awp.datasource.infosys.model.Statusbericht_detailModel;
import de.hska.wi.awp.datasource.infosys.model.Statusbericht_detailSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Statusbericht_detail service. Represents a row in the &quot;datasourceInfosys_Statusbericht_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.hska.wi.awp.datasource.infosys.model.Statusbericht_detailModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Statusbericht_detailImpl}.
 * </p>
 *
 * @author Daniel Storch
 * @see Statusbericht_detailImpl
 * @see de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail
 * @see de.hska.wi.awp.datasource.infosys.model.Statusbericht_detailModel
 * @generated
 */
@JSON(strict = true)
public class Statusbericht_detailModelImpl extends BaseModelImpl<Statusbericht_detail>
    implements Statusbericht_detailModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a statusbericht_detail model instance should use the {@link de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail} interface instead.
     */
    public static final String TABLE_NAME = "datasourceInfosys_Statusbericht_detail";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "text_", Types.VARCHAR },
            { "statusbericht_id", Types.BIGINT },
            { "statusbericht_detail_punkt_id", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table datasourceInfosys_Statusbericht_detail (id_ LONG not null primary key,text_ VARCHAR(500) null,statusbericht_id LONG,statusbericht_detail_punkt_id LONG)";
    public static final String TABLE_SQL_DROP = "drop table datasourceInfosys_Statusbericht_detail";
    public static final String ORDER_BY_JPQL = " ORDER BY statusbericht_detail.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY datasourceInfosys_Statusbericht_detail.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail"),
            true);
    public static long STATUSBERICHT_ID_COLUMN_BITMASK = 1L;
    public static long ID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail"));
    private static ClassLoader _classLoader = Statusbericht_detail.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Statusbericht_detail.class
        };
    private long _id;
    private String _text;
    private long _statusbericht_id;
    private long _originalStatusbericht_id;
    private boolean _setOriginalStatusbericht_id;
    private long _statusbericht_detail_punkt_id;
    private long _columnBitmask;
    private Statusbericht_detail _escapedModel;

    public Statusbericht_detailModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Statusbericht_detail toModel(
        Statusbericht_detailSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Statusbericht_detail model = new Statusbericht_detailImpl();

        model.setId(soapModel.getId());
        model.setText(soapModel.getText());
        model.setStatusbericht_id(soapModel.getStatusbericht_id());
        model.setStatusbericht_detail_punkt_id(soapModel.getStatusbericht_detail_punkt_id());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Statusbericht_detail> toModels(
        Statusbericht_detailSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Statusbericht_detail> models = new ArrayList<Statusbericht_detail>(soapModels.length);

        for (Statusbericht_detailSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Statusbericht_detail.class;
    }

    @Override
    public String getModelClassName() {
        return Statusbericht_detail.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("text", getText());
        attributes.put("statusbericht_id", getStatusbericht_id());
        attributes.put("statusbericht_detail_punkt_id",
            getStatusbericht_detail_punkt_id());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String text = (String) attributes.get("text");

        if (text != null) {
            setText(text);
        }

        Long statusbericht_id = (Long) attributes.get("statusbericht_id");

        if (statusbericht_id != null) {
            setStatusbericht_id(statusbericht_id);
        }

        Long statusbericht_detail_punkt_id = (Long) attributes.get(
                "statusbericht_detail_punkt_id");

        if (statusbericht_detail_punkt_id != null) {
            setStatusbericht_detail_punkt_id(statusbericht_detail_punkt_id);
        }
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public String getText() {
        if (_text == null) {
            return StringPool.BLANK;
        } else {
            return _text;
        }
    }

    @Override
    public void setText(String text) {
        _text = text;
    }

    @JSON
    @Override
    public long getStatusbericht_id() {
        return _statusbericht_id;
    }

    @Override
    public void setStatusbericht_id(long statusbericht_id) {
        _columnBitmask |= STATUSBERICHT_ID_COLUMN_BITMASK;

        if (!_setOriginalStatusbericht_id) {
            _setOriginalStatusbericht_id = true;

            _originalStatusbericht_id = _statusbericht_id;
        }

        _statusbericht_id = statusbericht_id;
    }

    public long getOriginalStatusbericht_id() {
        return _originalStatusbericht_id;
    }

    @JSON
    @Override
    public long getStatusbericht_detail_punkt_id() {
        return _statusbericht_detail_punkt_id;
    }

    @Override
    public void setStatusbericht_detail_punkt_id(
        long statusbericht_detail_punkt_id) {
        _statusbericht_detail_punkt_id = statusbericht_detail_punkt_id;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Statusbericht_detail.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Statusbericht_detail toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Statusbericht_detail) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        Statusbericht_detailImpl statusbericht_detailImpl = new Statusbericht_detailImpl();

        statusbericht_detailImpl.setId(getId());
        statusbericht_detailImpl.setText(getText());
        statusbericht_detailImpl.setStatusbericht_id(getStatusbericht_id());
        statusbericht_detailImpl.setStatusbericht_detail_punkt_id(getStatusbericht_detail_punkt_id());

        statusbericht_detailImpl.resetOriginalValues();

        return statusbericht_detailImpl;
    }

    @Override
    public int compareTo(Statusbericht_detail statusbericht_detail) {
        long primaryKey = statusbericht_detail.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Statusbericht_detail)) {
            return false;
        }

        Statusbericht_detail statusbericht_detail = (Statusbericht_detail) obj;

        long primaryKey = statusbericht_detail.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        Statusbericht_detailModelImpl statusbericht_detailModelImpl = this;

        statusbericht_detailModelImpl._originalStatusbericht_id = statusbericht_detailModelImpl._statusbericht_id;

        statusbericht_detailModelImpl._setOriginalStatusbericht_id = false;

        statusbericht_detailModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Statusbericht_detail> toCacheModel() {
        Statusbericht_detailCacheModel statusbericht_detailCacheModel = new Statusbericht_detailCacheModel();

        statusbericht_detailCacheModel.id = getId();

        statusbericht_detailCacheModel.text = getText();

        String text = statusbericht_detailCacheModel.text;

        if ((text != null) && (text.length() == 0)) {
            statusbericht_detailCacheModel.text = null;
        }

        statusbericht_detailCacheModel.statusbericht_id = getStatusbericht_id();

        statusbericht_detailCacheModel.statusbericht_detail_punkt_id = getStatusbericht_detail_punkt_id();

        return statusbericht_detailCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", text=");
        sb.append(getText());
        sb.append(", statusbericht_id=");
        sb.append(getStatusbericht_id());
        sb.append(", statusbericht_detail_punkt_id=");
        sb.append(getStatusbericht_detail_punkt_id());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append(
            "de.hska.wi.awp.datasource.infosys.model.Statusbericht_detail");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>text</column-name><column-value><![CDATA[");
        sb.append(getText());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusbericht_id</column-name><column-value><![CDATA[");
        sb.append(getStatusbericht_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusbericht_detail_punkt_id</column-name><column-value><![CDATA[");
        sb.append(getStatusbericht_detail_punkt_id());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
