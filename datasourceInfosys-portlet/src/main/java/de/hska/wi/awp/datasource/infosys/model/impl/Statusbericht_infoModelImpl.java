package de.hska.wi.awp.datasource.infosys.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.hska.wi.awp.datasource.infosys.model.Statusbericht_info;
import de.hska.wi.awp.datasource.infosys.model.Statusbericht_infoModel;
import de.hska.wi.awp.datasource.infosys.model.Statusbericht_infoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Statusbericht_info service. Represents a row in the &quot;datasourceInfosys_Statusbericht_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.hska.wi.awp.datasource.infosys.model.Statusbericht_infoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Statusbericht_infoImpl}.
 * </p>
 *
 * @author Daniel Storch
 * @see Statusbericht_infoImpl
 * @see de.hska.wi.awp.datasource.infosys.model.Statusbericht_info
 * @see de.hska.wi.awp.datasource.infosys.model.Statusbericht_infoModel
 * @generated
 */
@JSON(strict = true)
public class Statusbericht_infoModelImpl extends BaseModelImpl<Statusbericht_info>
    implements Statusbericht_infoModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a statusbericht_info model instance should use the {@link de.hska.wi.awp.datasource.infosys.model.Statusbericht_info} interface instead.
     */
    public static final String TABLE_NAME = "datasourceInfosys_Statusbericht_info";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "bemerkung", Types.VARCHAR },
            { "status", Types.INTEGER },
            { "statusbericht_id", Types.BIGINT },
            { "statusbericht_info_punkt_id", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table datasourceInfosys_Statusbericht_info (id_ LONG not null primary key,bemerkung VARCHAR(75) null,status INTEGER,statusbericht_id LONG,statusbericht_info_punkt_id LONG)";
    public static final String TABLE_SQL_DROP = "drop table datasourceInfosys_Statusbericht_info";
    public static final String ORDER_BY_JPQL = " ORDER BY statusbericht_info.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY datasourceInfosys_Statusbericht_info.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Statusbericht_info"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Statusbericht_info"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.de.hska.wi.awp.datasource.infosys.model.Statusbericht_info"),
            true);
    public static long STATUSBERICHT_ID_COLUMN_BITMASK = 1L;
    public static long ID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.hska.wi.awp.datasource.infosys.model.Statusbericht_info"));
    private static ClassLoader _classLoader = Statusbericht_info.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Statusbericht_info.class
        };
    private long _id;
    private String _bemerkung;
    private int _status;
    private long _statusbericht_id;
    private long _originalStatusbericht_id;
    private boolean _setOriginalStatusbericht_id;
    private long _statusbericht_info_punkt_id;
    private long _columnBitmask;
    private Statusbericht_info _escapedModel;

    public Statusbericht_infoModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Statusbericht_info toModel(Statusbericht_infoSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Statusbericht_info model = new Statusbericht_infoImpl();

        model.setId(soapModel.getId());
        model.setBemerkung(soapModel.getBemerkung());
        model.setStatus(soapModel.getStatus());
        model.setStatusbericht_id(soapModel.getStatusbericht_id());
        model.setStatusbericht_info_punkt_id(soapModel.getStatusbericht_info_punkt_id());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Statusbericht_info> toModels(
        Statusbericht_infoSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Statusbericht_info> models = new ArrayList<Statusbericht_info>(soapModels.length);

        for (Statusbericht_infoSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Statusbericht_info.class;
    }

    @Override
    public String getModelClassName() {
        return Statusbericht_info.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("bemerkung", getBemerkung());
        attributes.put("status", getStatus());
        attributes.put("statusbericht_id", getStatusbericht_id());
        attributes.put("statusbericht_info_punkt_id",
            getStatusbericht_info_punkt_id());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String bemerkung = (String) attributes.get("bemerkung");

        if (bemerkung != null) {
            setBemerkung(bemerkung);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        Long statusbericht_id = (Long) attributes.get("statusbericht_id");

        if (statusbericht_id != null) {
            setStatusbericht_id(statusbericht_id);
        }

        Long statusbericht_info_punkt_id = (Long) attributes.get(
                "statusbericht_info_punkt_id");

        if (statusbericht_info_punkt_id != null) {
            setStatusbericht_info_punkt_id(statusbericht_info_punkt_id);
        }
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public String getBemerkung() {
        if (_bemerkung == null) {
            return StringPool.BLANK;
        } else {
            return _bemerkung;
        }
    }

    @Override
    public void setBemerkung(String bemerkung) {
        _bemerkung = bemerkung;
    }

    @JSON
    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _status = status;
    }

    @JSON
    @Override
    public long getStatusbericht_id() {
        return _statusbericht_id;
    }

    @Override
    public void setStatusbericht_id(long statusbericht_id) {
        _columnBitmask |= STATUSBERICHT_ID_COLUMN_BITMASK;

        if (!_setOriginalStatusbericht_id) {
            _setOriginalStatusbericht_id = true;

            _originalStatusbericht_id = _statusbericht_id;
        }

        _statusbericht_id = statusbericht_id;
    }

    public long getOriginalStatusbericht_id() {
        return _originalStatusbericht_id;
    }

    @JSON
    @Override
    public long getStatusbericht_info_punkt_id() {
        return _statusbericht_info_punkt_id;
    }

    @Override
    public void setStatusbericht_info_punkt_id(long statusbericht_info_punkt_id) {
        _statusbericht_info_punkt_id = statusbericht_info_punkt_id;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Statusbericht_info.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Statusbericht_info toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Statusbericht_info) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        Statusbericht_infoImpl statusbericht_infoImpl = new Statusbericht_infoImpl();

        statusbericht_infoImpl.setId(getId());
        statusbericht_infoImpl.setBemerkung(getBemerkung());
        statusbericht_infoImpl.setStatus(getStatus());
        statusbericht_infoImpl.setStatusbericht_id(getStatusbericht_id());
        statusbericht_infoImpl.setStatusbericht_info_punkt_id(getStatusbericht_info_punkt_id());

        statusbericht_infoImpl.resetOriginalValues();

        return statusbericht_infoImpl;
    }

    @Override
    public int compareTo(Statusbericht_info statusbericht_info) {
        long primaryKey = statusbericht_info.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Statusbericht_info)) {
            return false;
        }

        Statusbericht_info statusbericht_info = (Statusbericht_info) obj;

        long primaryKey = statusbericht_info.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        Statusbericht_infoModelImpl statusbericht_infoModelImpl = this;

        statusbericht_infoModelImpl._originalStatusbericht_id = statusbericht_infoModelImpl._statusbericht_id;

        statusbericht_infoModelImpl._setOriginalStatusbericht_id = false;

        statusbericht_infoModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Statusbericht_info> toCacheModel() {
        Statusbericht_infoCacheModel statusbericht_infoCacheModel = new Statusbericht_infoCacheModel();

        statusbericht_infoCacheModel.id = getId();

        statusbericht_infoCacheModel.bemerkung = getBemerkung();

        String bemerkung = statusbericht_infoCacheModel.bemerkung;

        if ((bemerkung != null) && (bemerkung.length() == 0)) {
            statusbericht_infoCacheModel.bemerkung = null;
        }

        statusbericht_infoCacheModel.status = getStatus();

        statusbericht_infoCacheModel.statusbericht_id = getStatusbericht_id();

        statusbericht_infoCacheModel.statusbericht_info_punkt_id = getStatusbericht_info_punkt_id();

        return statusbericht_infoCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(11);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", bemerkung=");
        sb.append(getBemerkung());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", statusbericht_id=");
        sb.append(getStatusbericht_id());
        sb.append(", statusbericht_info_punkt_id=");
        sb.append(getStatusbericht_info_punkt_id());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(19);

        sb.append("<model><model-name>");
        sb.append("de.hska.wi.awp.datasource.infosys.model.Statusbericht_info");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>bemerkung</column-name><column-value><![CDATA[");
        sb.append(getBemerkung());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusbericht_id</column-name><column-value><![CDATA[");
        sb.append(getStatusbericht_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusbericht_info_punkt_id</column-name><column-value><![CDATA[");
        sb.append(getStatusbericht_info_punkt_id());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
