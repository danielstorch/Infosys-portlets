package de.hska.wi.awp.datasource.infosys.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.hska.wi.awp.datasource.infosys.model.Statusberichte;
import de.hska.wi.awp.datasource.infosys.model.StatusberichteModel;
import de.hska.wi.awp.datasource.infosys.model.StatusberichteSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Statusberichte service. Represents a row in the &quot;datasourceInfosys_Statusberichte&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.hska.wi.awp.datasource.infosys.model.StatusberichteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StatusberichteImpl}.
 * </p>
 *
 * @author Daniel Storch
 * @see StatusberichteImpl
 * @see de.hska.wi.awp.datasource.infosys.model.Statusberichte
 * @see de.hska.wi.awp.datasource.infosys.model.StatusberichteModel
 * @generated
 */
@JSON(strict = true)
public class StatusberichteModelImpl extends BaseModelImpl<Statusberichte>
    implements StatusberichteModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a statusberichte model instance should use the {@link de.hska.wi.awp.datasource.infosys.model.Statusberichte} interface instead.
     */
    public static final String TABLE_NAME = "datasourceInfosys_Statusberichte";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "project_id", Types.BIGINT },
            { "datum", Types.TIMESTAMP },
            { "kalenderwoche", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table datasourceInfosys_Statusberichte (id_ LONG not null primary key,project_id LONG,datum DATE null,kalenderwoche INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table datasourceInfosys_Statusberichte";
    public static final String ORDER_BY_JPQL = " ORDER BY statusberichte.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY datasourceInfosys_Statusberichte.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Statusberichte"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.hska.wi.awp.datasource.infosys.model.Statusberichte"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.de.hska.wi.awp.datasource.infosys.model.Statusberichte"),
            true);
    public static long PROJECT_ID_COLUMN_BITMASK = 1L;
    public static long ID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.hska.wi.awp.datasource.infosys.model.Statusberichte"));
    private static ClassLoader _classLoader = Statusberichte.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Statusberichte.class
        };
    private long _id;
    private long _project_id;
    private long _originalProject_id;
    private boolean _setOriginalProject_id;
    private Date _datum;
    private int _kalenderwoche;
    private long _columnBitmask;
    private Statusberichte _escapedModel;

    public StatusberichteModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Statusberichte toModel(StatusberichteSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Statusberichte model = new StatusberichteImpl();

        model.setId(soapModel.getId());
        model.setProject_id(soapModel.getProject_id());
        model.setDatum(soapModel.getDatum());
        model.setKalenderwoche(soapModel.getKalenderwoche());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Statusberichte> toModels(StatusberichteSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Statusberichte> models = new ArrayList<Statusberichte>(soapModels.length);

        for (StatusberichteSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Statusberichte.class;
    }

    @Override
    public String getModelClassName() {
        return Statusberichte.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("project_id", getProject_id());
        attributes.put("datum", getDatum());
        attributes.put("kalenderwoche", getKalenderwoche());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Long project_id = (Long) attributes.get("project_id");

        if (project_id != null) {
            setProject_id(project_id);
        }

        Date datum = (Date) attributes.get("datum");

        if (datum != null) {
            setDatum(datum);
        }

        Integer kalenderwoche = (Integer) attributes.get("kalenderwoche");

        if (kalenderwoche != null) {
            setKalenderwoche(kalenderwoche);
        }
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public long getProject_id() {
        return _project_id;
    }

    @Override
    public void setProject_id(long project_id) {
        _columnBitmask |= PROJECT_ID_COLUMN_BITMASK;

        if (!_setOriginalProject_id) {
            _setOriginalProject_id = true;

            _originalProject_id = _project_id;
        }

        _project_id = project_id;
    }

    public long getOriginalProject_id() {
        return _originalProject_id;
    }

    @JSON
    @Override
    public Date getDatum() {
        return _datum;
    }

    @Override
    public void setDatum(Date datum) {
        _datum = datum;
    }

    @JSON
    @Override
    public int getKalenderwoche() {
        return _kalenderwoche;
    }

    @Override
    public void setKalenderwoche(int kalenderwoche) {
        _kalenderwoche = kalenderwoche;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Statusberichte.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Statusberichte toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Statusberichte) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        StatusberichteImpl statusberichteImpl = new StatusberichteImpl();

        statusberichteImpl.setId(getId());
        statusberichteImpl.setProject_id(getProject_id());
        statusberichteImpl.setDatum(getDatum());
        statusberichteImpl.setKalenderwoche(getKalenderwoche());

        statusberichteImpl.resetOriginalValues();

        return statusberichteImpl;
    }

    @Override
    public int compareTo(Statusberichte statusberichte) {
        long primaryKey = statusberichte.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Statusberichte)) {
            return false;
        }

        Statusberichte statusberichte = (Statusberichte) obj;

        long primaryKey = statusberichte.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        StatusberichteModelImpl statusberichteModelImpl = this;

        statusberichteModelImpl._originalProject_id = statusberichteModelImpl._project_id;

        statusberichteModelImpl._setOriginalProject_id = false;

        statusberichteModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Statusberichte> toCacheModel() {
        StatusberichteCacheModel statusberichteCacheModel = new StatusberichteCacheModel();

        statusberichteCacheModel.id = getId();

        statusberichteCacheModel.project_id = getProject_id();

        Date datum = getDatum();

        if (datum != null) {
            statusberichteCacheModel.datum = datum.getTime();
        } else {
            statusberichteCacheModel.datum = Long.MIN_VALUE;
        }

        statusberichteCacheModel.kalenderwoche = getKalenderwoche();

        return statusberichteCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", project_id=");
        sb.append(getProject_id());
        sb.append(", datum=");
        sb.append(getDatum());
        sb.append(", kalenderwoche=");
        sb.append(getKalenderwoche());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append("de.hska.wi.awp.datasource.infosys.model.Statusberichte");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>project_id</column-name><column-value><![CDATA[");
        sb.append(getProject_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>datum</column-name><column-value><![CDATA[");
        sb.append(getDatum());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kalenderwoche</column-name><column-value><![CDATA[");
        sb.append(getKalenderwoche());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
